name: refresh_cdn

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['build_release']
    types: [completed]

# 添加并发控制
concurrency:
  group: refresh-cdn
  cancel-in-progress: false

jobs:
  refresh:
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' ) || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 1

      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install deps
        run: |
          sudo apt-get install jq -y
          npm install -g json5

      - name: Get Version
        id: local_version
        run: |
          version=$(json5 dist/gkd.version.json5 | jq -r '.version')
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Check Remote Version
        id: version_check
        run: |
          max_retries=5
          attempt=1
          while [ $attempt -le $max_retries ]; do
            echo "Attempt $attempt of $max_retries"

            # 从 GitHub Raw 获取远程版本
            remote_version=$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/dist/gkd.version.json5 | json5 | jq -r '.version')
            local_version=${{ steps.local_version.outputs.version }}

            echo "Remote version: $remote_version"
            echo "Local version: $local_version"

            if [ "$remote_version" -gt "$local_version" ]; then
              echo "Remote version ($remote_version) is newer than local version ($local_version)"
              echo "Skipping this workflow run to let the newer version handle it"
              echo "should_refresh=false" >> "$GITHUB_OUTPUT"
              exit 0
            fi

            if [ "$remote_version" = "$local_version" ]; then
              echo "Version match, proceeding to refresh CDN"
              echo "should_refresh=true" >> "$GITHUB_OUTPUT"
              break
            fi

            # 增加条件判断，最后一次尝试不等待
            if [ $attempt -lt $max_retries ]; then
              echo "Version mismatch, waiting $((60 + attempt * 30)) seconds..."
              sleep $((60 + attempt * 30))
            else
              echo "Final attempt failed, exiting..."
              echo "should_refresh=false" >> "$GITHUB_OUTPUT"
              exit 0
            fi

            attempt=$((attempt + 1))
          done

      - name: Refresh CDN
        id: refresh_cdn
        if: steps.version_check.outputs.should_refresh == 'true'
        run: |
          max_retries=5
          attempt=1

          while [ $attempt -le $max_retries ]; do
            echo "Attempt $attempt of $max_retries"

            # 刷新CDN
            curl -X GET https://purge.jsdelivr.net/gh/${{ github.repository }}@main/dist/gkd.json5
            curl -X GET https://purge.jsdelivr.net/gh/${{ github.repository }}@main/dist/gkd.version.json5

            # 等待 CDN 更新
            wait_time=$((15 + attempt * 15))
            echo "Waiting ${wait_time} seconds for CDN to update..."
            sleep $wait_time

            # 检查 CDN 版本
            remote_version=$(curl -s https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/dist/gkd.version.json5 | json5 | jq -r '.version')
            local_version=${{ steps.local_version.outputs.version }}

            echo "CDN version: $remote_version"
            echo "Local version: $local_version"

            if [ "$remote_version" = "$local_version" ]; then
              echo "Version match, CDN refresh successful"
              exit 0
            fi

            if [ "$remote_version" -gt "$local_version" ]; then
              echo "CDN version is newer than local version"
              echo "Repository should have newer commits, skip this workflow"
              exit 0
            fi

            if [ $attempt -lt $max_retries ]; then
              echo "Version mismatch, will retry..."
              wait_time=$((30 + attempt * 10))
              echo "Waiting ${wait_time} seconds..."
              sleep $wait_time
            else
              echo "Failed to refresh CDN after $max_retries attempts"
              exit 1
            fi

            attempt=$((attempt + 1))
          done
